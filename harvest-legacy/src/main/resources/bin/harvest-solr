#!/bin/sh

# Bourne Shell script that allows easy execution of the Harvest Tool
# without the need to set the CLASSPATH or having to type in that long java
# command (java gov.nasa.pds.harvest.HarvestLauncher ...)

# Expects the Harvest jar file to be in the ../lib directory.

################################################################################
# UPDATE VARIABLES AS NEEDED

SOLR_URL=http://localhost:8983/solr
SCRIPT_DIR=`cd "$( dirname $0 )" && pwd`
PARENT_DIR=`cd ${SCRIPT_DIR}/.. && pwd`
SEARCH_CONF=${PARENT_DIR}/conf/search/defaults/pds/pds4
# JAVA_HOME=

################################################################################

################################################################################
# WARNING: Should not need to update below. Proceed with caution.
################################################################################

# Check if PDS4_SOLR_DOC_HOME is set
if [ -z "${PDS4_SOLR_DOC_HOME}" ]; then
    echo "Error: PDS4_SOLR_DOC_HOME environment variable is not set"
    exit 1
fi

# Check if PDS4_SOLR_DOC_HOME directory exists
if [ ! -d "${PDS4_SOLR_DOC_HOME}" ]; then
    echo "Error: PDS4_SOLR_DOC_HOME directory does not exist: ${PDS4_SOLR_DOC_HOME}"
    exit 1
fi

# Define lock file path
LOCK_FILE="${PDS4_SOLR_DOC_HOME}/harvest-solr.lock"

LOCK_FILE="${PDS4_SOLR_DOC_HOME}/harvest-solr.lock"
FD=123
exec $FD>$LOCK_FILE
/usr/bin/flock --nonblock $FD || {
    echo "Another instance is runningâ€¦"
    exit 1
}

# Function to clean up lock file on exit
cleanup() {
    rm -f "$LOCK_FILE"
    echo "Lock file removed."
}

# Set up trap to ensure lock file is removed on script exit
trap cleanup EXIT

# Check if the JAVA_HOME environment variable is set.
if [ -z "${JAVA_HOME}" ]; then
   JAVA_CMD=`which java`
   if [ $? -ne 0 ]; then
     echo "JAVA_HOME is not set as an environment variable"
     exit 1
   fi
else
   JAVA_CMD="${JAVA_HOME}"/bin/java
fi


LIB_DIR=${PARENT_DIR}/lib
KEYSTORE=${PARENT_DIR}/keystore/tomcat_self_sign_keystore

# Check for dependencies.
if [ ! -f ${LIB_DIR}/harvest-*.jar ]; then
    echo
    echo "ERROR: Cannot find Harvest jar file in ${LIB_DIR}" 1>&2
    echo
    exit 1
fi

# Finds the jar file in LIB_DIR and sets it to HARVEST_JAR.
HARVEST_JAR=`ls ${LIB_DIR}/harvest-*.jar`

# Executes Harvest via the executable jar file
# Arguments are passed in to the tool via '$@'
${JAVA_CMD} -Xms256m -Xmx1024m -Dcom.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize=true -Dpds.search=${SOLR_URL} -Dpds.harvest.search.conf=${SEARCH_CONF} -Dresources.home=${PARENT_DIR}/resources -jar ${HARVEST_JAR} "$@"

