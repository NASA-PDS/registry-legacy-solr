# üèÉ‚Äç‚ôÄÔ∏è Continuous Integration and Delivery: Branch Testing
# ======================================================


---

name: üîÅ Branch integration testing


# Driving Event
# -------------
#
# What event starts this workflow: a push to any branch other than main

on:
    push:
        branches:
            -   '**'
            -   '!main'
    workflow_dispatch:


# What to Do
# ----------
#
# Test the software with mvn test

jobs:
    branch-testing:
        name: ü™µ Branch Testing
        runs-on: ubuntu-latest
        if: github.actor != 'pdsen-ci'

        strategy:
            matrix:
                java-version: [17]

        steps:
            -
                name: üí≥ Checkout
                uses: actions/checkout@v5
                with:
                    lfs: true
                    fetch-depth: 0
                    token: ${{secrets.ADMIN_GITHUB_TOKEN || github.token}}
            -
                name: üíµ Maven Cache
                uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    # The "key" used to indicate a set of cached files is the operating system runner
                    # plus "mvn" for Maven-specific builds, plus a hash of the `pom.xml` files, which
                    # should uniquely identify the dependent jars; plus "pds" because we pds-prefix
                    # everything with "pds" in PDS‚Äîeven when the context is obvious! üòÖ
                    key: pds-${{runner.os}}-mvn-${{hashFiles('**/pom.xml')}}
                    # To restore a set of files, we only need to match a prefix of the saved key.
                    restore-keys: pds-${{runner.os}}-mvn-
            -
                name: ‚òïÔ∏è Set up OpenJDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'adopt'
                    java-version: ${{matrix.java-version}}
            -
                name: ü©∫ Test, Build, and Unpack Software
                run: |
                    pwd
                    mvn install
                    tar -xvzf harvest-legacy/target/harvest-legacy-*-bin.tar.gz
                    tar -xvzf registry-mgr-legacy/target/registry-mgr-legacy-*-bin.tar.gz
                    tar -xvzf catalog-legacy/target/catalog-legacy-*-bin.tar.gz

            -
                name: ü©∫ Run Smoke Tests
                run: |
                    echo "Skipping Smoke Tests for now since starting Solr is not currently working"
                    # echo "Prep environment"
                    # export DATA_HOME=/registry-data
                    # sudo mkdir $DATA_HOME
                    # sudo chown 8983:8983 $DATA_HOME
                    # sudo chmod 777 $DATA_HOME

                    # export LEGACY_REGISTRY_HOME=$(pwd)/registry-mgr-legacy-*/
                    # export LEGACY_HARVEST_HOME=$(pwd)/harvest-legacy-*/
                    # export LEGACY_CATALOG_HOME=$(pwd)/catalog-legacy-*/
                    # cd test
                    # ./smoke-tests.sh

...

# -*- mode: yaml; indent: 4; fill-column: 120; coding: utf-8 -*-
